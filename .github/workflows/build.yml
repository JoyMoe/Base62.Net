name: build

on:
  push:
    branches: [dev, rel/*]
    tags: ["*"]
  pull_request:
    branches: [dev, rel/*]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            os_name: macos
          - os: ubuntu-latest
            os_name: linux
          - os: windows-latest
            os_name: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1

      - name: Set Build ID
        if: ${{ startsWith(github.ref, 'refs/pull/') == false }}
        shell: pwsh
        run: |
          $Now = (Get-Date).ToUniversalTime()
          $Hours = $Now.Hour * 4
          $QuarterHours = [Math]::Floor($Now.Minute / 15.0)
          $Revision = $Hours + $QuarterHours + 1
          $BuildId = $Now.ToString("yyyyMMdd") + "." + $Revision
          Write-Host "::set-env name=_AspNetContribBuildNumber::${BuildId}"

      - name: Build, Test and Package
        run: eng\common\CIBuild.cmd -configuration Release -prepareMachine
        if: ${{ runner.os == 'Windows' }}

      - name: Build, Test and Package
        run: ./eng/common/cibuild.sh --configuration Release --prepareMachine
        if: ${{ runner.os != 'Windows' }}

      - name: Publish logs
        uses: actions/upload-artifact@v1
        if: ${{ always() }}
        with:
          name: logs-${{ matrix.os_name }}
          path: ./artifacts/log/Release

      - name: Publish NuGet packages
        uses: actions/upload-artifact@v1
        with:
          name: packages-${{ matrix.os_name }}
          path: ./artifacts/packages/Release/Shipping

      - name: Publish test results
        uses: actions/upload-artifact@v1
        if: ${{ always() }}
        with:
          name: testresults-${{ matrix.os_name }}
          path: ./artifacts/TestResults/Release

      - name: Push Coverage to CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./tests/Base62.Tests/coverage.opencover.xml

      - name: Push NuGet packages to NuGet.org
        run: dotnet nuget push "artifacts\packages\Release\Shipping\*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate --source https://api.nuget.org/v3/index.json
        if: ${{ github.repository_owner == 'JoyMoe' && (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/')) && runner.os == 'Windows' }}
